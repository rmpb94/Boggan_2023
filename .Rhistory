source("C:/Users/nrb177/OneDrive - Newcastle University/PaperRepos/Boggan2022/R_scripts/5_LODAnalysis.R")
#simulationLOD =
ggplot(subset(results_long, !is.na(LOD)), aes(x=phenotype, y=LOD)) + theme_light() +
geom_jitter(alpha=0.5, height=0, width=0.3, colour = "#619B8A", size = 0.5) +
geom_boxplot(na.rm=T, outlier.shape= NA, alpha = 0.3, fill = "#233D4D") +
geom_point(data = act_res, aes(x = phenotype, y = LOD), colour = "#FE7F2D", size = 2, shape = 16) +
scale_x_discrete("",labels=c("psychiatric"="Psychiatric \ninvolvement",
"ataxia" = "Cerebellar ataxia",
"migraine" = "Migraine",
"cognition" = "Cognition",
"neuropathy" = "Neuropathy",
"dysphonia_dysarthria" = "Dysphonia-dysarthria",
"seizures" = "Seizures",
"encephalopathy" = "Encephalopathy",
"sle" = "Stroke-like \nepisodes",
"ptosis" =  "Ptosis",
"cpeo" = "CPEO",
"hearing" = "Hearing impairment",
"gi" = "Gastro-intestinal \ndisturbance",
"myopathy" = "Myopathy",
"diabetes" = "Diabetes",
"cardio" = "Cardiovascular \ninvolvement")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust=1, size=11)) +
geom_hline(yintercept = 3.3, colour = "red") +
geom_hline(yintercept = 1.86, colour = "grey50", size = 1, alpha = 0.8, linetype = "dashed") +
ylab("Maximum LOD score")
ggplot(subset(results_long_subset, !is.na(LOD)), aes(x=phenotype, y=LOD)) + theme_light() +
geom_jitter(alpha=0.5, height=0, width=0.3, colour = "#619B8A", size = 1.5) +
geom_boxplot(na.rm=T, outlier.shape= NA, alpha = 0.3, fill = "#233D4D") +
geom_point(data = act_res_subset, aes(x = phenotype, y = LOD), colour = "#FE7F2D", size = 2, shape = 16) +
scale_x_discrete("",labels=c("psychiatric"="Psychiatric \ninvolvement",
"ataxia" = "Cerebellar ataxia",
"migraine" = "Migraine",
"cognition" = "Cognition",
"neuropathy" = "Neuropathy",
"dysphonia_dysarthria" = "Dysphonia-dysarthria",
"seizures" = "Seizures",
"encephalopathy" = "Encephalopathy",
"sle" = "Stroke-like \nepisodes",
"ptosis" =  "Ptosis",
"cpeo" = "CPEO",
"hearing" = "Hearing impairment",
"gi" = "Gastro-intestinal \ndisturbance",
"myopathy" = "Myopathy",
"diabetes" = "Diabetes",
"cardio" = "Cardiovascular \ninvolvement")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust=1, size=11)) +
geom_hline(yintercept = 3.3, colour = "red") +
geom_hline(yintercept = 1.86, colour = "grey50", size = 1, alpha = 0.8, linetype = "dashed") +
ylab("Maximum LOD score")
ggplot(subset(results_long_subset, !is.na(LOD)), aes(x=phenotype, y=LOD)) + theme_light() +
geom_jitter(alpha=0.5, height=0, width=0.3, colour = "#619B8A", size = 1.5) +
geom_boxplot(na.rm=T, outlier.shape= NA, alpha = 0.1, fill = "#233D4D") +
geom_point(data = act_res_subset, aes(x = phenotype, y = LOD), colour = "#FE7F2D", size = 2, shape = 16) +
scale_x_discrete("",labels=c("psychiatric"="Psychiatric \ninvolvement",
"ataxia" = "Cerebellar ataxia",
"migraine" = "Migraine",
"cognition" = "Cognition",
"neuropathy" = "Neuropathy",
"dysphonia_dysarthria" = "Dysphonia-dysarthria",
"seizures" = "Seizures",
"encephalopathy" = "Encephalopathy",
"sle" = "Stroke-like \nepisodes",
"ptosis" =  "Ptosis",
"cpeo" = "CPEO",
"hearing" = "Hearing impairment",
"gi" = "Gastro-intestinal \ndisturbance",
"myopathy" = "Myopathy",
"diabetes" = "Diabetes",
"cardio" = "Cardiovascular \ninvolvement")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust=1, size=11)) +
geom_hline(yintercept = 3.3, colour = "red") +
geom_hline(yintercept = 1.86, colour = "grey50", size = 1, alpha = 0.8, linetype = "dashed") +
ylab("Maximum LOD score")
ggplot(subset(results_long_subset, !is.na(LOD)), aes(x=phenotype, y=LOD)) + theme_light() +
geom_boxplot(na.rm=T, outlier.shape= NA, alpha = 0.1, fill = "#233D4D") +
geom_jitter(alpha=0.5, height=0, width=0.3, colour = "#619B8A", size = 1.5) +
geom_point(data = act_res_subset, aes(x = phenotype, y = LOD), colour = "#FE7F2D", size = 2, shape = 16) +
scale_x_discrete("",labels=c("psychiatric"="Psychiatric \ninvolvement",
"ataxia" = "Cerebellar ataxia",
"migraine" = "Migraine",
"cognition" = "Cognition",
"neuropathy" = "Neuropathy",
"dysphonia_dysarthria" = "Dysphonia-dysarthria",
"seizures" = "Seizures",
"encephalopathy" = "Encephalopathy",
"sle" = "Stroke-like \nepisodes",
"ptosis" =  "Ptosis",
"cpeo" = "CPEO",
"hearing" = "Hearing impairment",
"gi" = "Gastro-intestinal \ndisturbance",
"myopathy" = "Myopathy",
"diabetes" = "Diabetes",
"cardio" = "Cardiovascular \ninvolvement")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust=1, size=11)) +
geom_hline(yintercept = 3.3, colour = "red") +
geom_hline(yintercept = 1.86, colour = "grey50", size = 1, alpha = 0.8, linetype = "dashed") +
ylab("Maximum LOD score")
ggplot(subset(results_long_subset, !is.na(LOD)), aes(x=phenotype, y=LOD)) + theme_light() +
geom_boxplot(na.rm=T, outlier.shape= NA, alpha = 0.1, fill = "#233D4D") +
geom_jitter(alpha=0.5, height=0, width=0.3, colour = "#619B8A", size = 1.5) +
scale_x_discrete("",labels=c("psychiatric"="Psychiatric \ninvolvement",
"ataxia" = "Cerebellar ataxia",
"migraine" = "Migraine",
"cognition" = "Cognition",
"neuropathy" = "Neuropathy",
"dysphonia_dysarthria" = "Dysphonia-dysarthria",
"seizures" = "Seizures",
"encephalopathy" = "Encephalopathy",
"sle" = "Stroke-like \nepisodes",
"ptosis" =  "Ptosis",
"cpeo" = "CPEO",
"hearing" = "Hearing impairment",
"gi" = "Gastro-intestinal \ndisturbance",
"myopathy" = "Myopathy",
"diabetes" = "Diabetes",
"cardio" = "Cardiovascular \ninvolvement")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust=1, size=11)) +
geom_hline(yintercept = 3.3, colour = "red") +
geom_hline(yintercept = 1.86, colour = "grey50", size = 1, alpha = 0.8, linetype = "dashed") +
ylab("Maximum LOD score")
##  GLM Phenotype data  ####
##  This uses the binary phenotype data for the full cohort
##  Libraries ####
library(arm)
library(plyr)
library(ggplot2)
##  Fucntions ####
"%notin%" = Negate("%in%")
##  Data  ####
ped = read.table("Input/FullCohortBinaryPedigree.txt", stringsAsFactors = F, h = T)
dim(ped)##  796 46
View(ped)
ped[ped$pid == "EXLD24562-01",]
ped[ped$pid == "505165057D",]
extra = data.frame(pid = "EXLD24562-01",
diabetes = 1,
diabetes_age = 48,
hearing = 1
hearing_age = 48,
extra = data.frame(pid = "EXLD24562-01",
diabetes = 1,
diabetes_age = 48,
hearing = 1,
hearing_age = 48,
het = 0.807897329429264)
ped = merge(ped, extra, by = "pid")
extra = data.frame(pid = "EXLD24562-01",
diabetes = 1,
diabetes_age = 48,
hearing = 1,
hearing_age = 48,
het = 0.807897329429264)
ped = merge(ped, extra, by = "pid", all.x = T)
##  Data  ####
ped = read.table("Input/FullCohortBinaryPedigree.txt", stringsAsFactors = F, h = T)
dim(ped)##  796 46
##  Formatting  ####
##  Fix missing sex value
ped[is.na(ped$sex),]
ped$sex = ifelse(ped$pid == "EX1607228", "M", ped$sex)
##  Missing pheno info, add in
ped[ped$pid == "EXLD24562-01",]
extra = data.frame(pid = "EXLD24562-01",
diabetes = 1,
diabetes_age = 48,
hearing = 1,
hearing_age = 48,
het = 0.807897329429264)
ped = merge(ped, extra, by = "pid", all.x = T)
ped$sex = ifelse(ped$pid == "EX1607228", "M", ped$sex)
##  Missing pheno info, add in
ped[ped$pid == "EXLD24562-01",]
ped = merge(ped, extra, by = "pid",)
##  Fucntions ####
"%notin%" = Negate("%in%")
##  Data  ####
ped = read.table("Input/FullCohortBinaryPedigree.txt", stringsAsFactors = F, h = T)
dim(ped)##  796 46
##  Formatting  ####
##  Fix missing sex value
ped[is.na(ped$sex),]
ped$sex = ifelse(ped$pid == "EX1607228", "M", ped$sex)
##  Missing pheno info, add in
ped[ped$pid == "EXLD24562-01",]
ped$diabetes = ifelse(ped$pid == "EXLD24562-01", 1, ped$diabetes)
ped$diabetes_age = ifelse(ped$pid == "EXLD24562-01", 48, ped$diabetes_age)
ped$hearing = ifelse(ped$pid == "EXLD24562-01", 1, ped$hearing)
ped$hearing_age = ifelse(ped$pid == "EXLD24562-01", 48, ped$hearing_age)
ped$het = ifelse(ped$pid == "EXLD24562-01", 0.807897329429264, ped$het)
ped[ped$pid == "EXLD24562-01",]
## Sex formatting
ped$sex = ifelse(ped$sex == "M", 1, 2)
table(ped$sex)
##  Heteroplasmy info ####
het_data = ped[,which(names(ped) %in% c("famid", "pid", "het"))]
head(het_data)
source("~/OneDrive - Newcastle University/PaperRepos/Boggan2022/R_scripts/1_GLMRegression.R")
##  Functions ####
'%notin%' = Negate('%in%')
##  Data  ####
indir = c("Input/Results/")
phenotypes = c("diabetes", "encephalopathy", "hearing", "sle")
##  Read in all of the results files
file_list = list.files("Input/Results/", pattern = ".txt")
data_files = lapply(paste0("Input/Results/", file_list), read.table, header=F)
##  Define variables used for storage in loop
chr_list = c()
pheno_list = c()
bp_list = c()
up_list = c()
low_list = c()
lod_list = c()
for(file in 1:length(data_files)){
pheno_val = phenotypes[[file]]
names(data_files[[file]]) = c("CHR", "LABEL", "TRAIT", "H2", "SD", "INFO", "LOD", "PVALUE", "BP")
data = data_files[[file]]
data_sub = subset(data, data$LOD >= 1.86)
lods = c()
pos = c()
window = 15000000
##  Do the next step per chromosome
for(chr in 1:22){
data_chr = subset(data_sub, data_sub$CHR == chr)
if(length(data_chr$LOD) > 0){
repeat{
max_lod = max(data_chr$LOD)
lod_pos = subset(data_chr, data_chr$LOD == max_lod)
chromosome = chr
lod_pos = lod_pos$BP[1]
upper_lim = lod_pos + window
lower_lim = lod_pos - window
bp_remove = c(lower_lim:upper_lim)
bp_list = c(bp_list, lod_pos)
up_list = c(up_list, upper_lim)
low_list = c(low_list, lower_lim)
lods = c(lods, max_lod)
pos = c(pos, lod_pos)
chr_list = c(chr_list, chromosome)
pheno_list = c(pheno_list, pheno_val)
lod_list = c(lod_list, max_lod)
data_chr = subset(data_chr, data_chr$BP %notin% bp_remove)
if(length(data_chr$LOD) == 0) break
}
}
}
}
length(bp_list)
length(chr_list)
results = as.data.frame(matrix(ncol = 6, nrow = 15))
names(results) = c("pheno", "chr", "LOD", "BP", "BP_Lower", "BP_Upper")
results$pheno = pheno_list
results$chr = chr_list
results$LOD = lod_list
results$BP = bp_list
results$BP_Lower = low_list
results$BP_Upper = up_list
results
##  Replace any negative values of lower limits with 0s
##  This is because I can't have a negative value of BPs
results$BP_Lower = ifelse(results$BP_Lower < 0, 0, results$BP_Lower)
results
##  Save this table
write.table(results, "Output/PeakBoundries.txt", col.names = T, row.names = F, quote = F)
##  Peak Adjustment ####
peaks = read.table("Output/PeakBoundries.txt", stringsAsFactors = F, h = T)
head(peaks)
##  Replace negative BP values with 0s
peaks$BP_Lower = ifelse(peaks$BP_Lower < 0, 0, peaks$BP_Lower)
peaks$Peak_LOD = peaks$LOD
new_data = as.data.frame(matrix(ncol = 7, nrow = 0))
names(new_data) = c("pheno", "chr", "LOD", "BP", "BP_Lower", "BP_Upper", "Peak_LOD")
phenotypes = c("diabetes", "encephalopathy", "hearing", "sle")
for(p in phenotypes){
dat1 = subset(peaks, peaks$pheno == p)
for(c in 1:22){
dat2 = dat1
dat3 = subset(dat2, dat2$chr == c)
##  Order the dataframe smallest to largest
dat3 = dat3[order(dat3$BP_Lower),]
##  If there is 1 row
if(length(dat3$chr) == 1){
new_data = merge(new_data, dat3, by = names(new_data), all = T)
}
##  If there is more than 1 row
else if(length(dat3$chr) > 1){
##  Get a list of the number of rows
rows = c(1:length(dat3$chr))
##  Compare the rows
for(r in rows){
rowA = r
rowB = r + 1
##  If the value of rowB is less than or equal to the length of the df
##  I can can compare both rows
if(rowB <= length(dat3$chr)){
##  In this case, there are 2 outcomes
##  1. Peaks don't overlap
##  2. Peaks overlap
##  Peaks don't overlap
if(dat3$BP_Upper[rowA] < dat3$BP_Lower[rowB]){
##  Take row A, and put this into new_data
#row_data = dat3[rowA,]
#new_data = rbind(new_data, row_data)
}
##  Peaks overlap
else if(dat3$BP_Upper[rowA] > dat3$BP_Lower[rowB]){
##  The upper boundary of row A is greater than the lower boundary of row B
##  This means that the Upper of row A becomes the upper of row B
##  And the lower of row B becomes the lower of row A
##  ANYWHERE IN DAT3
dat3$BP_Upper = ifelse(dat3$BP_Upper == dat3$BP_Upper[rowA], dat3$BP_Upper[rowB], dat3$BP_Upper)
dat3$BP_Lower = ifelse(dat3$BP_Lower == dat3$BP_Lower[rowB], dat3$BP_Lower[rowA], dat3$BP_Lower)
##  Also want to show the max LOD score across these windows
lods = subset(dat3, dat3$BP_Lower == dat3$BP_Lower[rowA])
lods = lods$LOD
newlod = max(lods)
dat3$Peak_LOD = ifelse(dat3$BP_Lower == dat3$BP_Lower[rowA], newlod, dat3$LOD)
}
}
if(rowB == length(dat3$chr)){
##  If rowB indicates we are at the final row, merge the data with the new_data df
new_data = merge(new_data, dat3, by = names(dat3), all = T, sort = F)
}
##  If the value of rowB is greater than the length of the df
else if(rowB > length(dat3$chr)){
break
}
}
}
}
}
new_data
new_data2 = new_data[,-which(names(new_data) %in% c("LOD", "BP"))]
new_data2 = new_data2[!duplicated(new_data2),]
##  This gives the adjusted peaks for the actual data
write.table(new_data2, "Output/PeaksAdjusted.txt", col.names = T, row.names = F, quote = F)
##  Functions ####
"%!in%" = Negate("%in%")
##  Libraries ####
library(tidyverse)
library(patchwork)
##  Data  ####
peaks = read.table("Input/PeaksAdjusted.txt", stringsAsFactors = F, h = T)
dim(peaks) ## 6584
real_peaks = read.table("Output/PeaksAdjusted.txt", stringsAsFactors = F, h = T)
##  Peaks per phenotype ####
phenotype = c("diabetes", "encephalopathy", "hearing", "sle")
sims = paste0("LOD_", 1:1000)
##  Boxplot ####
peaks2 = peaks[,-which(names(peaks) %in% c("BP", "LOD"))]
peaks2 = peaks2[!duplicated(peaks2),]
peaks2$pheno = factor(peaks2$pheno, levels = c("diabetes", "encephalopathy", "hearing", "sle"))
##  Table of number of peaks predicted
peak_phenos = c("diabetes", "encephalopathy", "hearing", "sle")
results = as.data.frame(matrix(ncol = 3, nrow = 0))
for(p in peak_phenos){
dat = subset(peaks2, peaks2$pheno == p)
peaks_pred = as.data.frame(table(dat$Sim))
head(peaks_pred)
names(peaks_pred) = c("sim", "Freq")
peaks_pred$phenotype = p
results = rbind(results, peaks_pred)
}
head(results)
write.table(results, "Output/PredictedPeaksSimulations.txt", col.names = T, row.names = F, quote = F)
##  Encephalopathy  ####
enceph1 = subset(peaks2, peaks2$pheno == "encephalopathy")
enceph2 = as.data.frame(table(enceph1$Sim))
##  Add number of simulations in which 0 peaks were identified
enceph.nopeaks.length = 1000 - length(enceph2$Var1)
enceph.nopeaks = as.data.frame(matrix(ncol = 2, nrow = enceph.nopeaks.length))
names(enceph.nopeaks) = c("Var1", "Freq")
enceph.nopeaks$Var1 = paste0("LOD", 1000 + 1:enceph.nopeaks.length)
enceph.nopeaks$Freq = 0
enceph3 = rbind(enceph2, enceph.nopeaks)
head(enceph3)
enceph.centile = quantile(enceph3$Freq, probs = c(0.95))
##  Plot barchart
enceph.plot =
ggplot(data = enceph3) + theme_light() +
geom_bar(aes(x = Freq),  fill = "#009988", colour="#009988") +
scale_x_continuous(breaks = seq(0, 9, 1)) +
geom_point(aes(x = 6, y = 50), fill = "#233D4D", shape = 24, size = 3) +
geom_point(aes(x = enceph.centile, y = 100), colour = "#ee7733", shape = 8, size = 3) +
labs(x = "Number of peaks predicted", y = "Frequency")
enceph.plot
head(results)
##  Data  ####
peaks = read.table("Input/PeaksAdjusted.txt", stringsAsFactors = F, h = T)
dim(peaks) ## 6584
head(peaks)
peaks_enceph = subset(peaks, peaks$pheno == "encephalopathy")
peaks_enceph = subset(peaks_enceph, peaks_enceph$LOD > 3.67)
peaks_enceph = subset(peaks, peaks$pheno == "encephalopathy")
peaks_enceph = subset(peaks_enceph, peaks_enceph$LOD < 3.67)
head(peaks_enceph)
peaks_enceph = subset(peaks_enceph, peaks_enceph$LOD >= 2.23)
head(peaks_enceph)
source("~/OneDrive - Newcastle University/PaperRepos/Boggan2022/R_scripts/5_LODAnalysis.R")
ggplot(subset(results_long_subset, !is.na(LOD)), aes(x=phenotype, y=LOD)) + theme_light() +
geom_boxplot(na.rm=T, outlier.shape= NA, alpha = 0.1, fill = "#233D4D") +
geom_jitter(alpha=0.5, height=0, width=0.3, colour = "#619B8A", size = 1.5) +
geom_point(data = act_res_subset, aes(x = phenotype, y = LOD), colour = "#FE7F2D", size = 2, shape = 16) +
scale_x_discrete("",labels=c("psychiatric"="Psychiatric \ninvolvement",
"ataxia" = "Cerebellar ataxia",
"migraine" = "Migraine",
"cognition" = "Cognition",
"neuropathy" = "Neuropathy",
"dysphonia_dysarthria" = "Dysphonia-dysarthria",
"seizures" = "Seizures",
"encephalopathy" = "Encephalopathy",
"sle" = "Stroke-like \nepisodes",
"ptosis" =  "Ptosis",
"cpeo" = "CPEO",
"hearing" = "Hearing impairment",
"gi" = "Gastro-intestinal \ndisturbance",
"myopathy" = "Myopathy",
"diabetes" = "Diabetes",
"cardio" = "Cardiovascular \ninvolvement")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust=1, size=11)) +
geom_hline(yintercept = 3.3, colour = "red") +
geom_hline(yintercept = 1.86, colour = "grey50", size = 1, alpha = 0.8, linetype = "dashed") +
ylab("Maximum LOD score")
ggplot(subset(results_long_subset, !is.na(LOD)), aes(x=phenotype, y=LOD)) + theme_light() +
geom_boxplot(na.rm=T, outlier.shape= NA, alpha = 0.1, fill = "#233D4D") +
geom_jitter(alpha=0.5, height=0, width=0.3, colour = "#619B8A", size = 1.5) +
scale_x_discrete("",labels=c("encephalopathy" = "Encephalopathy",
"sle" = "Stroke-like \nepisodes",
"hearing" = "Hearing impairment",
"diabetes" = "Diabetes")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust=1, size=11)) +
geom_hline(yintercept = 3.3, colour = "red") +
geom_hline(yintercept = 1.86, colour = "grey50", size = 1, alpha = 0.8, linetype = "dashed") +
ylab("Maximum LOD score")
ggplot(subset(results_long_subset, !is.na(LOD)), aes(x=phenotype, y=LOD)) + theme_light() +
geom_boxplot(na.rm=T, outlier.shape= NA, alpha = 0.1, fill = "#233D4D") +
geom_jitter(alpha=0.5, height=0, width=0.3, colour = "#009988", size = 1.5) +
scale_x_discrete("",labels=c("encephalopathy" = "Encephalopathy",
"sle" = "Stroke-like \nepisodes",
"hearing" = "Hearing impairment",
"diabetes" = "Diabetes")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust=1, size=11)) +
geom_hline(yintercept = 3.3, colour = "red") +
geom_hline(yintercept = 1.86, colour = "grey50", size = 1, alpha = 0.8, linetype = "dashed") +
ylab("Maximum LOD score")
#simulationLOD =
ggplot(subset(results_long, !is.na(LOD)), aes(x=phenotype, y=LOD)) + theme_light() +
geom_jitter(alpha=0.5, height=0, width=0.3, colour = "#619B8A", size = 0.5) +
geom_boxplot(na.rm=T, outlier.shape= NA, alpha = 0.3, fill = "#233D4D") +
geom_point(data = act_res, aes(x = phenotype, y = LOD), colour = "#FE7F2D", size = 2, shape = 16) +
scale_x_discrete("",labels=c("psychiatric"="Psychiatric \ninvolvement",
"ataxia" = "Cerebellar ataxia",
"migraine" = "Migraine",
"cognition" = "Cognition",
"neuropathy" = "Neuropathy",
"dysphonia_dysarthria" = "Dysphonia-dysarthria",
"seizures" = "Seizures",
"encephalopathy" = "Encephalopathy",
"sle" = "Stroke-like \nepisodes",
"ptosis" =  "Ptosis",
"cpeo" = "CPEO",
"hearing" = "Hearing impairment",
"gi" = "Gastro-intestinal \ndisturbance",
"myopathy" = "Myopathy",
"diabetes" = "Diabetes",
"cardio" = "Cardiovascular \ninvolvement")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust=1, size=11)) +
geom_hline(yintercept = 3.3, colour = "red") +
geom_hline(yintercept = 1.86, colour = "grey50", size = 1, alpha = 0.8, linetype = "dashed") +
ylab("Maximum LOD score")
results_long$phenotype = factor(results_long$phenotype, levels = c("encephalopathy", "sle", "diabetes", "hearing"))
ggplot(subset(results_long, !is.na(LOD)), aes(x=phenotype, y=LOD)) + theme_light() +
geom_boxplot(na.rm=T, outlier.shape= NA, alpha = 0.1, fill = "#233D4D") +
geom_jitter(alpha=0.5, height=0, width=0.3, colour = "#009988", size = 1.5) +
scale_x_discrete("",labels=c("encephalopathy" = "Encephalopathy",
"sle" = "Stroke-like \nepisodes",
"hearing" = "Hearing impairment",
"diabetes" = "Diabetes")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust=1, size=11)) +
geom_hline(yintercept = 3.3, colour = "red") +
geom_hline(yintercept = 1.86, colour = "grey50", size = 1, alpha = 0.8, linetype = "dashed") +
ylab("Maximum LOD score")
lod_distribution=
ggplot(subset(results_long, !is.na(LOD)), aes(x=phenotype, y=LOD)) + theme_light() +
geom_boxplot(na.rm=T, outlier.shape= NA, alpha = 0.1, fill = "#233D4D") +
geom_jitter(alpha=0.5, height=0, width=0.3, colour = "#009988", size = 1.5) +
scale_x_discrete("",labels=c("encephalopathy" = "Encephalopathy",
"sle" = "Stroke-like \nepisodes",
"hearing" = "Hearing impairment",
"diabetes" = "Diabetes")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust=1, size=11)) +
geom_hline(yintercept = 3.3, colour = "red") +
geom_hline(yintercept = 1.86, colour = "grey50", size = 1, alpha = 0.8, linetype = "dashed") +
ylab("Maximum LOD score")
tiff("Output/Figures/LODDistributions.tiff", units = "in", height = 3, width = 6, res = 600)
lod_distribution
dev.off()
lod_distribution=
ggplot(subset(results_long, !is.na(LOD)), aes(x=phenotype, y=LOD)) + theme_light() +
geom_boxplot(na.rm=T, outlier.shape= NA, alpha = 0.1, fill = "#233D4D") +
geom_jitter(alpha=0.3, height=0, width=0.3, colour = "#009988", size = 1.5) +
scale_x_discrete("",labels=c("encephalopathy" = "Encephalopathy",
"sle" = "Stroke-like \nepisodes",
"hearing" = "Hearing \nimpairment",
"diabetes" = "Diabetes")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust=1, size=11)) +
geom_hline(yintercept = 3.3, colour = "red") +
geom_hline(yintercept = 1.86, colour = "grey50", size = 1, alpha = 0.8, linetype = "dashed") +
ylab("Maximum LOD score")
tiff("Output/Figures/LODDistributions.tiff", units = "in", height = 4, width = 8, res = 600)
lod_distribution
dev.off()
